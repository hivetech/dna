---
- name: Install dev module dependencies
  when: ansible_pkg_mgr == "apt"
  action: apt pkg={{ item }} state=latest update_cache=true
  with_items:
    - python-pip
    - pep8
    - make
    - ipython
    - bison
    - libssl-dev
    - zlib1g-dev
    - libncurses5-dev
    - libreadline-dev
    - libbz2-dev
    - libsqlite3-dev
    - ruby1.9.3
    - golang
    
# A BASH wrapper for getopts, for simple command line arguments
- name: Install optparse
  shell: wget -O /usr/local/lib/optparse.bash https://raw.github.com/nk412/optparse/master/optparse.bash

# A tool that automatically formats Python code to conform to the PEP 8 style guide
- name: Install automatic pep8 formater
  pip: name=autopep8

- name: Install funcy tools for python
  pip: name=funcy

- name: Install pip-tools
  pip: name=pip-tools

- name: Install tox
  pip: name=tox

# Installs latest available version of rake.
#FIXME Can't found ruby > 1.9.2
#- name: Install rubocop
  #gem: name=rubocop state=latest

#TODO Is it better than using https://github.com/yyuu/pyenv-virtualenvwrapper ?
#TODO Check, test and use plugins https://github.com/yyuu/pyenv/wiki/Plugins
# With one command, have a working Python virtualenv + virtualenvwrapper environment.
- name: Install python Virtualenv Burrito
  shell: export HOME={{ home }} && curl -s https://raw.github.com/brainsik/virtualenv-burrito/master/virtualenv-burrito.sh | bash
  ignore_errors: yes   # The script ends up with wrong status if it already exists but that is not an error and we want to stay idempotent

# Simple Python version management
#FIXME Everything installed with pip here won't be available with futur version of python installed with pyenv
- name: Download python version manager
  git: repo=git://github.com/yyuu/pyenv.git dest={{ home }}/.pyenv

#TODO https://github.com/nsf/gocode
# Go Version Manager http://github.com/moovweb/gvm
- name: Install go version manager
  shell: export HOME={{ home }} && curl -s https://raw.github.com/moovweb/gvm/master/binscripts/gvm-installer | bash
  ignore_errors: yes   # The script ends up with wrong status if it already exists but that is not an error and we want to stay idempotent

# Node Version Manager - Simple bash script to manage multiple active node.js versions
- name: Install Node version manager
  git: repo=https://github.com/creationix/nvm
       dest={{ home }}/.nvm

# ------------------- Ruby
#NOTE Interesting ? https://github.com/fesplugas/rbenv-installer
# Groom your appâ€™s Ruby environment
- name: Install Rbenv, ruby version manager
  git: repo=https://github.com/sstephenson/rbenv
       dest={{ home }}/.rbenv
  when: "'{{ dev.ruby_manager }}' == 'rbenv'"

# Compile and install Ruby
- name: Install ruby-build as rbenv plugin
  git: repo=https://github.com/sstephenson/ruby-build
       dest={{ home }}/.rbenv/plugins/ruby-build
  when: "'{{ dev.ruby_manager }}' == 'rbenv'"

# an rbenv plugin that makes shims aware of bundle installation paths
- name: Install rbenv-bundler plugin
  git: repo=https://github.com/carsomyr/rbenv-bundler
       dest={{ home }}/.rbenv/plugins/bundler
  when: "'{{ dev.ruby_manager }}' == 'rbenv'"

# Add excellent gem / gemset management to your rbenv!
- name: Install rbenv-gemset plugin
  git: repo=https://github.com/jf/rbenv-gemset
    dest={{ home }}/.rbenv/plugins/rbenv-gemset
  when: "'{{ dev.ruby_manager }}' == 'rbenv'"

# An autocompletion daemon for the Go programming language
- name: Install go configuration for vim
  shell: go get -u github.com/nsf/gocode
