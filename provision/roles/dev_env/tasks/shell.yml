---

- name: Install shell module dependencies
  when: ansible_pkg_mgr == "apt"
  action: apt pkg={{ item }} state=latest update_cache=true
  with_items:
    - curl
    - '{{ shell.default }}'
    - acpi
    - lm-sensors
    - '{{ terminal_multiplexer }}'
    - build-essential
    - autoconf
    - rake
    - cmake
    - libncurses5-dev

- name: Copy shared shell configuration file
  template: src={{ dna_root }}/shell/commonrc.j2 dest={{ home }}/.commonrc owner={{ ansible_user_id }} mode=600
- copy: src={{ dna_root }}/shell/customrc.sh dest={{ home }}/.customrc owner={{ ansible_user_id }} mode=600
- copy: src={{ dna_root }}/shell/common-alias.sh dest={{ home }}/.common-alias owner={{ ansible_user_id }} mode=600
- copy: src={{ dna_root }}/shell/custom-alias.sh dest={{ home }}/.custom-alias owner={{ ansible_user_id }} mode=600
- copy: src={{ dna_root }}/shell/common-functions.sh dest={{ home }}/.common-functions owner={{ ansible_user_id }} mode=600

- copy: src={{ dna_root }}/shell/wgetrc dest={{ home }}/.wgetrc owner={{ ansible_user_id }} mode=600

# A full-featured & carefully designed adaptive prompt for Bash & Zsh
- name: Install liquidprompt
  git: repo=https://github.com/nojhan/liquidprompt.git
       dest={{ openlibs }}/liquidprompt
  when: "'shell.prompt' == 'liquidprompt'"
- name: Copy liquidprompt config
  copy: src={{ dna_root }}/shell/liquidpromptrc-dist dest={{ home }}/.liquidpromptrc
  when: "'shell.prompt' == 'liquidprompt'"

- name: Setting default shell
  action: user shell=/bin/{{ shell.default }} user={{ ansible_user_id }}
  when: "'shell.default' == 'zsh' or '{{ shell.default }}' == 'bash'"
# Fish-shell binary has a different localtion
- action: user shell=/usr/local/bin/{{ shell.default }} user={{ ansible_user_id }}
  when: "'shell.default' == 'fish'"

- name: Downlaod bash-it framework
  git: repo=git://github.com/revans/bash-it.git dest={{ home }}/.bash_it
  when: "'shell.prompt' == 'bashit'"
- name: Copy non-interactive installation script
  copy: src={{ dna_root }}/shell/bash/install-bash-it.sh dest={{ home }}/.bash_it owner={{ ansible_user_id }} mode=755
  when: "'shell.prompt' == 'bashit'"
- name: Install bash-it
  shell: export HOME={{ home }} && /{{ home }}/.bash_it/install-bash-it.sh
  when: "'shell.prompt' == 'bashit'"

# Multiplexers
- name: Configure screen
  copy: src={{ dna_root }}/shell/multiplexer/screenrc dest={{ home }}/.screenrc owner={{ ansible_user_id }} mode=600
  when: "'terminal_multiplexer' == 'screen'"
- name: Configure tmux
  copy: src={{ dna_root }}/shell/multiplexer/square.tmux.conf dest={{ home }}/.tmux.conf owner={{ ansible_user_id }} mode=600
  when: "'terminal_multiplexer' == 'tmux'"

# stderr in red.
- name: Download stderred, make errors red in your shell
  git: repo=https://github.com/sickill/stderred.git
       dest={{ openlibs }}/stderred
- name: Build and install stderred
  shell: cd '{{ openlibs }}'/stderred && make

# Copy libs
- name: Copy utils libs in /usr/local/lib
  copy: src={{ dna_root }}/shell/utils.bash dest=/usr/local/lib/ owner={{ ansible_user_id }} mode=755

